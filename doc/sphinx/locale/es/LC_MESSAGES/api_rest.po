# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, Irontec
# This file is distributed under the same license as the IvozProvider
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IvozProvider 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-11 16:24+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../api_rest/integrations.rst:3
msgid "Third party integrations"
msgstr ""

#: ../../api_rest/integrations.rst:5
msgid ""
"Ivoz Provider makes use of **OpenAPI Specification 2.0** (which is "
"identical to the Swagger 2.0 specification before it was renamed to "
"\"OpenAPI Specification\")."
msgstr ""

#: ../../api_rest/integrations.rst:8
msgid ""
"APIs are supposed to be the way to integrate third party applications "
"with IvozProvider. Some community tools, such as `swagger-codegen "
"<https://github.com/swagger-api/swagger-codegen>`_, may be of great help "
"during the client development. According to their github page the "
"following language/framework code auto-generation is supported:"
msgstr ""

#: ../../api_rest/integrations.rst:12
msgid "ActionScript"
msgstr ""

#: ../../api_rest/integrations.rst:13
msgid "Ada"
msgstr ""

#: ../../api_rest/integrations.rst:14
msgid "Apex"
msgstr ""

#: ../../api_rest/integrations.rst:15
msgid "Bash"
msgstr ""

#: ../../api_rest/integrations.rst:16
msgid "C# (.net 2.0, 3.5 or later)"
msgstr ""

#: ../../api_rest/integrations.rst:17
msgid "C++ (cpprest, Qt5, Tizen)"
msgstr ""

#: ../../api_rest/integrations.rst:18
msgid "Clojure"
msgstr ""

#: ../../api_rest/integrations.rst:19
msgid "Dart"
msgstr ""

#: ../../api_rest/integrations.rst:20
msgid "Elixir"
msgstr ""

#: ../../api_rest/integrations.rst:21
msgid "Elm"
msgstr ""

#: ../../api_rest/integrations.rst:22
msgid "Eiffel"
msgstr ""

#: ../../api_rest/integrations.rst:23
msgid "Erlang"
msgstr ""

#: ../../api_rest/integrations.rst:24
msgid "Go"
msgstr ""

#: ../../api_rest/integrations.rst:25
msgid "Groovy"
msgstr ""

#: ../../api_rest/integrations.rst:26
msgid "Haskell (http-client, Servant)"
msgstr ""

#: ../../api_rest/integrations.rst:27
msgid ""
"Java (Jersey1.x, Jersey2.x, OkHttp, Retrofit1.x, Retrofit2.x, Feign, "
"RestTemplate, RESTEasy, Vertx, Google API Client Library for Java, Rest-"
"assured)"
msgstr ""

#: ../../api_rest/integrations.rst:28
msgid "Kotlin"
msgstr ""

#: ../../api_rest/integrations.rst:29
msgid "Lua"
msgstr ""

#: ../../api_rest/integrations.rst:30
msgid "Node.js (ES5, ES6, AngularJS with Google Closure Compiler annotations)"
msgstr ""

#: ../../api_rest/integrations.rst:31
msgid "Objective-C"
msgstr ""

#: ../../api_rest/integrations.rst:32
msgid "Perl"
msgstr ""

#: ../../api_rest/integrations.rst:33
msgid "PHP"
msgstr ""

#: ../../api_rest/integrations.rst:34
msgid "PowerShell"
msgstr ""

#: ../../api_rest/integrations.rst:35
msgid "Python"
msgstr ""

#: ../../api_rest/integrations.rst:36
msgid "R"
msgstr ""

#: ../../api_rest/integrations.rst:37
msgid "Ruby"
msgstr ""

#: ../../api_rest/integrations.rst:38
msgid "Rust (rust, rust-server)"
msgstr ""

#: ../../api_rest/integrations.rst:39
msgid "Scala (akka, http4s, swagger-async-httpclient)"
msgstr ""

#: ../../api_rest/integrations.rst:40
msgid "Swift (2.x, 3.x, 4.x)"
msgstr ""

#: ../../api_rest/integrations.rst:41
msgid "Typescript (Angular1.x, Angular2.x, Fetch, jQuery, Node)"
msgstr ""

#: ../../api_rest/integrations.rst:43
msgid "You'll find API specs in the URLs below:"
msgstr ""

#: ../../api_rest/integrations.rst:45
msgid "`Platform API spec </api/platform/swagger.json>`_"
msgstr ""

#: ../../api_rest/integrations.rst:46
msgid "`Brand API spec </api/brand/swagger.json>`_"
msgstr ""

#: ../../api_rest/integrations.rst:47
msgid "`Client API spec </api/client/swagger.json>`_"
msgstr ""

#: ../../api_rest/introduction.rst:3
msgid "Introduction to IvozProvider API"
msgstr ""

#: ../../api_rest/introduction.rst:5
msgid ""
"Ivoz Provider offers three `hypermedia "
"<https://en.wikipedia.org/wiki/HATEOAS>`_-driven REST APIs, one for each "
"admin role. The three of them have been built over `OpenAPI Specification"
" <https://www.openapis.org/>`_, a community-driven open specification "
"within the OpenAPI Initiative, a Linux Foundation Collaborative Project. "
"This initiative is supported by some leading tech companies such as "
"Adobe, Google, IBM, Microsoft and `more "
"<https://www.openapis.org/membership/members)>`_."
msgstr ""

#: ../../api_rest/introduction.rst:10
msgid "We support the features below:"
msgstr ""

#: ../../api_rest/introduction.rst:12
msgid "Nice human-readable specification, including a sandbox"
msgstr ""

#: ../../api_rest/introduction.rst:13
msgid "JSON Web Token (JWT) based authentication"
msgstr ""

#: ../../api_rest/introduction.rst:14
msgid "Request and response content type negotiation"
msgstr ""

#: ../../api_rest/introduction.rst:15
msgid "Result pagination"
msgstr ""

#: ../../api_rest/introduction.rst:16
msgid "Response property filters"
msgstr ""

#: ../../api_rest/introduction.rst:17
msgid "Result filters"
msgstr ""

#: ../../api_rest/introduction.rst:18
msgid "Result ordering"
msgstr ""

#: ../../api_rest/introduction.rst:19
msgid "Security layer: Resource and record access control"
msgstr ""

#: ../../api_rest/web_client.rst:3
msgid "Built-in web client"
msgstr ""

#: ../../api_rest/web_client.rst:5
msgid ""
"APIs come with their own web client so that you can test them easily. Go "
"to `Platform API </api/platform/index.html>`_ for instance."
msgstr ""

#: ../../api_rest/web_client.rst:10
msgid ""
"You will need to get an access token with some valid admin credentials "
"before anything else. You can do that from [Auth] > [POST /admin_login] "
"section. Click on `Try it out` button, set your credentials and click on "
"`execute` to send the request. You should get a response that contains a "
"token and a refresh token."
msgstr ""

#: ../../api_rest/web_client.rst:15
msgid ""
"Copy the token and set it on `Authorize` button at the top of the page. "
"The token ttl (time to live) is one hour by default, you can use the "
"refresh token then to get a new one without sending admin credentials "
"again."
msgstr ""

#: ../../api_rest/web_client.rst:17
msgid ""
"Once you have got your token properly set, click on [GET /administrators]"
" endpoint, `Try it out` and `Execute`. You may want to switch `Response "
"content type` as well (JSON or LD+JSON for this endpoint)."
msgstr ""

#: ../../api_rest/web_client.rst:22
msgid ""
"It's possible to filter and sort response using `Parameters` input fields"
" as well."
msgstr ""

#: ../../api_rest/web_client.rst:26
msgid "Specification"
msgstr ""

#: ../../api_rest/web_client.rst:27
msgid "You can check out request and response models from the web client itself."
msgstr ""

