{
	"info": {
		"name": "IvozProvider - BBS Dataset (oasis)",
		"_postman_id": "e8979e62-3197-1a7c-e054-d57b6107322e",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "0000 - Brand Data",
			"item": [
				{
					"name": "Create BBS Brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Brand id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"brandId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"type": "text",
									"value": "ZZZ - BBS - Brand for Black Box SIP tests"
								},
								{
									"key": "nif",
									"type": "text",
									"value": "01234567890AF"
								},
								{
									"key": "defaultTimezoneId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "postalAddress",
									"type": "text",
									"value": "Postal address created from REST API"
								},
								{
									"key": "postalCode",
									"type": "text",
									"value": "48901"
								},
								{
									"key": "town",
									"type": "text",
									"value": "Rest API town"
								},
								{
									"key": "province",
									"type": "text",
									"value": "Rest API province"
								},
								{
									"key": "country",
									"type": "text",
									"value": "Rest API country"
								},
								{
									"key": "registryData",
									"type": "text",
									"value": "Brand Invoice Footer data"
								},
								{
									"key": "domain_users",
									"type": "text",
									"value": "retail-bbs.ivozprovider.local"
								}
							]
						},
						"url": "{{api_url}}/brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Queues",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "3"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Friends",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "4"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "5"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Billing",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "6"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Invoices",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "7"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "8"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Retail",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "9"
								}
							]
						},
						"url": "{{api_url}}/features-rel-brands/"
					},
					"response": []
				},
				{
					"name": "Create Number Transformation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Pering Contract id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"transformationRulesetId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Spanish Operator"
								},
								{
									"key": "automatic",
									"type": "text",
									"value": "1"
								},
								{
									"key": "internationalCode",
									"type": "text",
									"value": "00"
								},
								{
									"key": "nationalNumLength",
									"type": "text",
									"value": "9"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								}
							]
						},
						"url": "{{api_url}}/transformation-ruleset-groups-trunks/"
					},
					"response": []
				},
				{
					"name": "Create Peering Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Pering Contract id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"peeringContractId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Peering Contract"
								},
								{
									"key": "externallyRated",
									"type": "text",
									"value": "0"
								},
								{
									"key": "transformationRulesetGroupsTrunksId",
									"type": "text",
									"value": "{{transformationRulesetId}}"
								}
							]
						},
						"url": "{{api_url}}/peering-contracts//"
					},
					"response": []
				},
				{
					"name": "Create Peer Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"peerServerId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								},
								{
									"key": "sip_proxy",
									"type": "text",
									"value": "127.0.0.1"
								}
							]
						},
						"url": "{{api_url}}/peer-servers/"
					},
					"response": []
				},
				{
					"name": "Create Routing pattern ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Routing pattern id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"routingPatternESId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name_es",
									"type": "text",
									"value": "BBS - España"
								},
								{
									"key": "name_en",
									"type": "text",
									"value": "BBS - Spain"
								},
								{
									"key": "regExp",
									"type": "text",
									"value": "34"
								}
							]
						},
						"url": "{{api_url}}/routing-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Outgoing Routing ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Routing pattern id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"outgoingRouteESId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "routingPatternId",
									"type": "text",
									"value": "{{routingPatternESId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								},
								{
									"key": "type",
									"type": "text",
									"value": "pattern"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/outgoing-routing/"
					},
					"response": []
				},
				{
					"name": "Create Routing pattern US",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Routing pattern id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"routingPatternUSId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name_es",
									"type": "text",
									"value": "BBS - EEUU"
								},
								{
									"key": "name_en",
									"type": "text",
									"value": "BBS - USA"
								},
								{
									"key": "regExp",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/routing-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Outgoing Routing US",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Routing pattern id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"outgoingRouteUSId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "routingPatternId",
									"type": "text",
									"value": "{{routingPatternUSId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								},
								{
									"key": "type",
									"type": "text",
									"value": "pattern"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/outgoing-routing/"
					},
					"response": []
				},
				{
					"name": "Create Pricing pattern ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Target pattern id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"targetPatternESId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name_es",
									"type": "text",
									"value": "BBS - España"
								},
								{
									"key": "name_en",
									"type": "text",
									"value": "BBS - Spain"
								},
								{
									"key": "description_es",
									"type": "text",
									"value": "BBS - España"
								},
								{
									"key": "description_en",
									"type": "text",
									"value": "BBS - Spain"
								},
								{
									"key": "regExp",
									"type": "text",
									"value": "34"
								}
							]
						},
						"url": "{{api_url}}/target-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Pricing pattern US",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Target pattern id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"targetPatternUSId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name_es",
									"type": "text",
									"value": "BBS - EEUU"
								},
								{
									"key": "name_en",
									"type": "text",
									"value": "BBS - USA"
								},
								{
									"key": "description_es",
									"type": "text",
									"value": "BBS - EEUU"
								},
								{
									"key": "description_en",
									"type": "text",
									"value": "BBS - USA"
								},
								{
									"key": "regExp",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/target-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Pricing Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"pricingPlanId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name_es",
									"type": "text",
									"value": "BBS - Pruebas"
								},
								{
									"key": "name_en",
									"type": "text",
									"value": "BBS - Tests"
								},
								{
									"key": "description_es",
									"type": "text",
									"value": "BBS - Pruebas"
								},
								{
									"key": "description_en",
									"type": "text",
									"value": "BBS - Tests"
								}
							]
						},
						"url": "{{api_url}}/pricing-plans/"
					},
					"response": []
				},
				{
					"name": "Add ES pattern to PricingPlan",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "pricingPlanId",
									"type": "text",
									"value": "{{pricingPlanId}}"
								},
								{
									"key": "targetPatternId",
									"type": "text",
									"value": "{{targetPatternESId}}"
								},
								{
									"key": "connectionCharge",
									"type": "text",
									"value": "0.15"
								},
								{
									"key": "periodTime",
									"type": "text",
									"value": "1"
								},
								{
									"key": "perPeriodCharge",
									"type": "text",
									"value": "0.20"
								}
							]
						},
						"url": "{{api_url}}/pricing-plans-rel-target-patterns/"
					},
					"response": []
				},
				{
					"name": "Add US pattern to PricingPlan",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "pricingPlanId",
									"type": "text",
									"value": "{{pricingPlanId}}"
								},
								{
									"key": "targetPatternId",
									"type": "text",
									"value": "{{targetPatternUSId}}"
								},
								{
									"key": "connectionCharge",
									"type": "text",
									"value": "0.20"
								},
								{
									"key": "periodTime",
									"type": "text",
									"value": "1"
								},
								{
									"key": "perPeriodCharge",
									"type": "text",
									"value": "0.25"
								}
							]
						},
						"url": "{{api_url}}/pricing-plans-rel-target-patterns/"
					},
					"response": []
				}
			]
		},
		{
			"name": "0010 - Company Data",
			"item": [
				{
					"name": "Create BBS Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Company id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"companyId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS - Company for Black Box SIP tests"
								},
								{
									"key": "nif",
									"type": "text",
									"value": "09876543210ART"
								},
								{
									"key": "defaultTimezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "postalAddress",
									"type": "text",
									"value": "Company postal address"
								},
								{
									"key": "postalCode",
									"type": "text",
									"value": "Company postal code"
								},
								{
									"key": "town",
									"type": "text",
									"value": "Company town"
								},
								{
									"key": "province",
									"type": "text",
									"value": "Company province"
								},
								{
									"key": "country",
									"type": "text",
									"value": "Company country"
								},
								{
									"key": "domain_users",
									"type": "text",
									"value": "bbs.ivozprovider.local"
								},
								{
									"key": "type",
									"type": "text",
									"value": "vpbx"
								},
								{
									"key": "externalMaxCalls",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/companies/"
					},
					"response": []
				},
				{
					"name": "Add PricingPlan to company",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "pricingPlanId",
									"type": "text",
									"value": "{{pricingPlanId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "validFrom",
									"type": "text",
									"value": "2000-01-01"
								},
								{
									"key": "validTo",
									"type": "text",
									"value": "2099-12-31"
								},
								{
									"key": "metric",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/pricing-plans-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Queues",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "3"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Friends",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "4"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "5"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "8"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Create Alice Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"aliceTerminalId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "terminalModelId",
									"type": "text",
									"value": "5"
								},
								{
									"key": "name",
									"type": "text",
									"value": "alice"
								},
								{
									"key": "password",
									"type": "text",
									"value": "4l1c3p4ssw0rd"
								},
								{
									"key": "direct_media_method",
									"type": "text",
									"value": "invite"
								}
							]
						},
						"url": "{{api_url}}/terminals/"
					},
					"response": []
				},
				{
					"name": "Create Alice User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"aliceUserId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Alice"
								},
								{
									"key": "lastname",
									"type": "text",
									"value": "Allison"
								},
								{
									"key": "email",
									"type": "text",
									"value": "alice@bbs.ivozprovider.local"
								},
								{
									"key": "username",
									"type": "text",
									"value": "alice"
								},
								{
									"key": "pass",
									"type": "text",
									"value": "4l1c3p4ssw0rd"
								},
								{
									"key": "timezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "terminalId",
									"type": "text",
									"value": "{{aliceTerminalId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": "{{api_url}}/users/"
					},
					"response": []
				},
				{
					"name": "Create Alice Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"aliceExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "number",
									"type": "text",
									"value": "1001"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{aliceUserId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Alice DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"aliceDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999661001"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{aliceUserId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Create Bob Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"bobTerminalId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "terminalModelId",
									"type": "text",
									"value": "5"
								},
								{
									"key": "name",
									"type": "text",
									"value": "bob"
								},
								{
									"key": "password",
									"type": "text",
									"value": "b0bp4ssw0rd"
								},
								{
									"key": "direct_media_method",
									"type": "text",
									"value": "invite"
								}
							]
						},
						"url": "{{api_url}}/terminals/"
					},
					"response": []
				},
				{
					"name": "Create Bob User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"bobUserId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Bob"
								},
								{
									"key": "lastname",
									"type": "text",
									"value": "Bobson"
								},
								{
									"key": "email",
									"type": "text",
									"value": "bob@bbs.ivozprovider.local"
								},
								{
									"key": "username",
									"type": "text",
									"value": "bob"
								},
								{
									"key": "pass",
									"type": "text",
									"value": "b0bp4ssw0rd"
								},
								{
									"key": "timezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "terminalId",
									"type": "text",
									"value": "{{bobTerminalId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								}
							]
						},
						"url": "{{api_url}}/users/"
					},
					"response": []
				},
				{
					"name": "Create Bob Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"bobExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "number",
									"type": "text",
									"value": "1002"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{bobUserId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Bob DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"bobDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999661002"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{bobUserId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Create Charlie Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"charlieTerminalId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "terminalModelId",
									"type": "text",
									"value": "5"
								},
								{
									"key": "name",
									"type": "text",
									"value": "charlie"
								},
								{
									"key": "password",
									"type": "text",
									"value": "ch4rl13p4ssw0rd"
								},
								{
									"key": "direct_media_method",
									"type": "text",
									"value": "invite"
								}
							]
						},
						"url": "{{api_url}}/terminals/"
					},
					"response": []
				},
				{
					"name": "Create Charlie User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"charlieUserId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Charlie"
								},
								{
									"key": "lastname",
									"type": "text",
									"value": "Charlison"
								},
								{
									"key": "email",
									"type": "text",
									"value": "charly@bbs.ivozprovider.local"
								},
								{
									"key": "username",
									"type": "text",
									"value": "charlie"
								},
								{
									"key": "pass",
									"type": "text",
									"value": "ch4rl13p4ssw0rd"
								},
								{
									"key": "timezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "terminalId",
									"type": "text",
									"value": "{{charlieTerminalId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								}
							]
						},
						"url": "{{api_url}}/users/"
					},
					"response": []
				},
				{
					"name": "Create Charlie Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"charlieExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "number",
									"type": "text",
									"value": "1003"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{charlieUserId}}"
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Charlie DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"charlieDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999661003"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{charlieUserId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Create Dave Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"daveTerminalId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "terminalModelId",
									"type": "text",
									"value": "5"
								},
								{
									"key": "name",
									"type": "text",
									"value": "dave"
								},
								{
									"key": "password",
									"type": "text",
									"value": "d4v3p4ssw0rd"
								},
								{
									"key": "direct_media_method",
									"type": "text",
									"value": "invite"
								}
							]
						},
						"url": "{{api_url}}/terminals/"
					},
					"response": []
				},
				{
					"name": "Create Dave User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"daveUserId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Dave"
								},
								{
									"key": "lastname",
									"type": "text",
									"value": "Daveson"
								},
								{
									"key": "email",
									"type": "text",
									"value": "dave@bbs.ivozprovider.local"
								},
								{
									"key": "username",
									"type": "text",
									"value": "dave"
								},
								{
									"key": "pass",
									"type": "text",
									"value": "d4v3p4ssw0rd"
								},
								{
									"key": "timezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "terminalId",
									"type": "text",
									"value": "{{daveTerminalId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "235"
								},
								{
									"key": "area_code",
									"type": "text",
									"value": "999"
								}
							]
						},
						"url": "{{api_url}}/users/"
					},
					"response": []
				},
				{
					"name": "Create Dave Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"daveExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "number",
									"type": "text",
									"value": "1004"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{daveUserId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Dave DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"daveDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "235"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999661004"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{daveUserId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Create Eve Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"eveTerminalId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "terminalModelId",
									"type": "text",
									"value": "5"
								},
								{
									"key": "name",
									"type": "text",
									"value": "eve"
								},
								{
									"key": "password",
									"type": "text",
									"value": "3v3p4ssw0rd"
								},
								{
									"key": "direct_media_method",
									"type": "text",
									"value": "invite"
								}
							]
						},
						"url": "{{api_url}}/terminals/"
					},
					"response": []
				},
				{
					"name": "Create Eve User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"eveUserId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Eve"
								},
								{
									"key": "lastname",
									"type": "text",
									"value": "Eveson"
								},
								{
									"key": "email",
									"type": "text",
									"value": "eve@bbs.ivozprovider.local"
								},
								{
									"key": "username",
									"type": "text",
									"value": "eve"
								},
								{
									"key": "pass",
									"type": "text",
									"value": "3v3p4ssw0rd"
								},
								{
									"key": "timezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "terminalId",
									"type": "text",
									"value": "{{eveTerminalId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "235"
								},
								{
									"key": "area_code",
									"type": "text",
									"value": "999"
								}
							]
						},
						"url": "{{api_url}}/users/"
					},
					"response": []
				},
				{
					"name": "Create Eve Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"eveExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "number",
									"type": "text",
									"value": "1005"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{eveUserId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Eve DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"eveDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "235"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999661005"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{eveUserId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"bossAssistantWatchListId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "White List for Boss Frank"
								}
							]
						},
						"url": "{{api_url}}/match-lists/"
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList Pattern Ext",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "matchListId",
									"type": "text",
									"value": "{{bossAssistantWatchListId}}"
								},
								{
									"key": "description",
									"type": "text",
									"value": "Alice DDI Number"
								},
								{
									"key": "type",
									"type": "text",
									"value": "number"
								},
								{
									"key": "numberCountryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "numberValue",
									"value": "999661001",
									"type": "text"
								}
							]
						},
						"url": "{{api_url}}/match-list-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList Pattern Int",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "matchListId",
									"type": "text",
									"value": "{{bossAssistantWatchListId}}"
								},
								{
									"key": "description",
									"type": "text",
									"value": "Alice Extension Number"
								},
								{
									"key": "type",
									"type": "text",
									"value": "regexp"
								},
								{
									"key": "regExp",
									"type": "text",
									"value": "^1001$"
								}
							]
						},
						"url": "{{api_url}}/match-list-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Frank Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"frankTerminalId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "terminalModelId",
									"type": "text",
									"value": "5"
								},
								{
									"key": "name",
									"type": "text",
									"value": "frank"
								},
								{
									"key": "password",
									"type": "text",
									"value": "fr4nkp4ssw0rd"
								},
								{
									"key": "direct_media_method",
									"type": "text",
									"value": "invite"
								}
							]
						},
						"url": "{{api_url}}/terminals/"
					},
					"response": []
				},
				{
					"name": "Create Frank User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"frankUserId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "Frank"
								},
								{
									"key": "lastname",
									"type": "text",
									"value": "Frankson"
								},
								{
									"key": "email",
									"type": "text",
									"value": "frank@bbs.ivozprovider.local"
								},
								{
									"key": "username",
									"type": "text",
									"value": "eve"
								},
								{
									"key": "pass",
									"type": "text",
									"value": "fr4nkp4ssw0rd"
								},
								{
									"key": "timezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "terminalId",
									"type": "text",
									"value": "{{frankTerminalId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "235"
								},
								{
									"key": "area_code",
									"type": "text",
									"value": "999"
								},
								{
									"key": "isBoss",
									"type": "text",
									"value": "1"
								},
								{
									"key": "bossAssistantId",
									"type": "text",
									"value": "{{daveUserId}}"
								},
								{
									"key": "bossAssistantWhiteListId",
									"value": "{{bossAssistantWatchListId}}",
									"type": "text"
								}
							]
						},
						"url": "{{api_url}}/users/"
					},
					"response": []
				},
				{
					"name": "Create Frank Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"frankExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "number",
									"type": "text",
									"value": "1006"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{frankUserId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Frank DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"frankDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999661006"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{frankUserId}}"
								},
								{
									"key": "peeringContractId",
									"type": "text",
									"value": "{{peeringContractId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Set Default Company DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "outgoingDDIId",
									"type": "text",
									"value": "{{aliceDDIId}}"
								}
							]
						},
						"url": "{{api_url}}/companies/{{companyId}}"
					},
					"response": []
				},
				{
					"name": "Create Friend",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"friendId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "friend"
								},
								{
									"key": "domain",
									"type": "text",
									"value": "bbs.ivozprovider.local"
								},
								{
									"key": "directConnectivity",
									"type": "text",
									"value": "no"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "70"
								},
								{
									"key": "password",
									"type": "text",
									"value": "fr13ndp4ssw0rd"
								},
								{
									"key": "transport",
									"type": "text",
									"value": "udp"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/friends/"
					},
					"response": []
				},
				{
					"name": "Create Friend Pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"friendId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "friendId",
									"type": "text",
									"value": "{{friendId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "2XXX Extensions"
								},
								{
									"key": "regExp",
									"type": "text",
									"value": "^2[0-9]{3}$"
								}
							]
						},
						"url": "{{api_url}}/friends-patterns/"
					},
					"response": []
				},
				{
					"name": "Create Friend Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"friendExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "friend"
								},
								{
									"key": "number",
									"value": "2001"
								},
								{
									"key": "friendValue",
									"type": "text",
									"value": "2001"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create Route Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab74710f-ee23-4934-8b1f-40e953078e31",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"routeLockId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Route Lock"
								},
								{
									"key": "description",
									"value": "For testing Conditional Routes"
								},
								{
									"key": "open",
									"value": "0",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": "{{api_url}}/route-locks/"
					},
					"response": []
				}
			]
		},
		{
			"name": "0020 - Retail Data",
			"item": [
				{
					"name": "Create BBS Retail Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Retail id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"retailId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS - Retail for Black Box SIP tests"
								},
								{
									"key": "nif",
									"type": "text",
									"value": "09876543210ART"
								},
								{
									"key": "defaultTimezoneId",
									"type": "text",
									"value": "1"
								},
								{
									"key": "postalAddress",
									"type": "text",
									"value": "Retail postal address"
								},
								{
									"key": "postalCode",
									"type": "text",
									"value": "Retail postal code"
								},
								{
									"key": "town",
									"type": "text",
									"value": "Retail town"
								},
								{
									"key": "province",
									"type": "text",
									"value": "Retail province"
								},
								{
									"key": "country",
									"type": "text",
									"value": "Retail country"
								},
								{
									"key": "type",
									"type": "text",
									"value": "retail"
								}
							]
						},
						"url": "{{api_url}}/companies/"
					},
					"response": []
				},
				{
					"name": "Add PricingPlan to retail",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "pricingPlanId",
									"type": "text",
									"value": "{{pricingPlanId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{retailId}}"
								},
								{
									"key": "validFrom",
									"type": "text",
									"value": "2000-01-01"
								},
								{
									"key": "validTo",
									"type": "text",
									"value": "2099-12-31"
								},
								{
									"key": "metric",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/pricing-plans-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Retail Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{retailId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Retail Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{retailId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "3"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Add Retail Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{retailId}}"
								},
								{
									"key": "featureId",
									"type": "text",
									"value": "8"
								}
							]
						},
						"url": "{{api_url}}/features-rel-companies/"
					},
					"response": []
				},
				{
					"name": "Create Retail Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Retail account id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"retailAccountId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{retailId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "20000"
								},
								{
									"key": "password",
									"type": "text",
									"value": "r3t41lp4ssw0rd"
								},
								{
									"key": "transport",
									"type": "text",
									"value": "udp"
								},
								{
									"key": "directConnectivity",
									"type": "text",
									"value": "no"
								}
							]
						},
						"url": "{{api_url}}/retail-accounts/"
					},
					"response": []
				},
				{
					"name": "Create Retail DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"    ",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"retailDDIId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "brandId",
									"type": "text",
									"value": "{{brandId}}"
								},
								{
									"key": "companyId",
									"type": "text",
									"value": "{{retailId}}"
								},
								{
									"key": "countryId",
									"type": "text",
									"value": "235"
								},
								{
									"key": "DDI",
									"type": "text",
									"value": "999920000"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "retailAccount"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{retailAccountId}}"
								}
							]
						},
						"url": "{{api_url}}/d-d-is/"
					},
					"response": []
				},
				{
					"name": "Set Default Retail Client DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "outgoingDDIId",
									"type": "text",
									"value": "{{retailDDIId}}"
								}
							]
						},
						"url": "{{api_url}}/companies/{{retailId}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "2000 - IVR",
			"item": [
				{
					"name": "Create IVR Generic",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"ivrCommonId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Generic IVR"
								},
								{
									"key": "timeout",
									"type": "text",
									"value": "5"
								},
								{
									"key": "maxDigits",
									"type": "text",
									"value": "4"
								},
								{
									"key": "timeoutTargetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "timeoutExtensionId",
									"type": "text",
									"value": "{{daveExtensionId}}"
								},
								{
									"key": "errorTargetType",
									"type": "text",
									"value": "number"
								},
								{
									"key": "errorNumberValue",
									"type": "text",
									"value": "0034999661003"
								}
							]
						},
						"url": "{{api_url}}/i-v-r-common",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create IVR Generic Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "IVRCommon"
								},
								{
									"key": "number",
									"type": "text",
									"value": "600"
								},
								{
									"key": "IVRCommonId",
									"type": "text",
									"value": "{{ivrCommonId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create IVR Custom",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"ivrCustomId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Custom IVR"
								},
								{
									"key": "timeout",
									"type": "text",
									"value": "5"
								},
								{
									"key": "maxDigits",
									"type": "text",
									"value": "1"
								},
								{
									"key": "timeoutTargetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "timeoutExtensionId",
									"type": "text",
									"value": "{{daveExtensionId}}"
								},
								{
									"key": "errorTargetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "errorExtensionId",
									"type": "text",
									"value": "{{eveExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}/i-v-r-custom",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"ivrCustomExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "IVRCustom"
								},
								{
									"key": "number",
									"type": "text",
									"value": "601"
								},
								{
									"key": "IVRCustomId",
									"type": "text",
									"value": "{{ivrCustomId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Entry 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "IVRCustomId",
									"type": "text",
									"value": "{{ivrCustomId}}"
								},
								{
									"key": "entry",
									"type": "text",
									"value": "1"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "targetExtensionId",
									"type": "text",
									"value": "{{aliceExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}//i-v-r-custom-entries"
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Entry 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "IVRCustomId",
									"type": "text",
									"value": "{{ivrCustomId}}"
								},
								{
									"key": "entry",
									"type": "text",
									"value": "5"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "targetExtensionId",
									"type": "text",
									"value": "{{eveExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}//i-v-r-custom-entries"
					},
					"response": []
				}
			]
		},
		{
			"name": "2200 - Pickup",
			"item": [
				{
					"name": "Create Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"pickupGroupId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Pickup Group"
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								}
							]
						},
						"url": "{{api_url}}/pick-up-groups",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Alice to Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "pickUpGroupId",
									"type": "text",
									"value": "{{pickupGroupId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{aliceUserId}}"
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								}
							]
						},
						"url": "{{api_url}}/pick-up-rel-users/",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Bob to Pickup Group copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "pickUpGroupId",
									"type": "text",
									"value": "{{pickupGroupId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{bobUserId}}"
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								}
							]
						},
						"url": "{{api_url}}/pick-up-rel-users/",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Charlie to Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "pickUpGroupId",
									"type": "text",
									"value": "{{pickupGroupId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{charlieUserId}}"
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"type": "text",
									"value": "",
									"disabled": true
								}
							]
						},
						"url": "{{api_url}}/pick-up-rel-users/",
						"description": "POST"
					},
					"response": []
				}
			]
		},
		{
			"name": "2300 - Conference",
			"item": [
				{
					"name": "Create Conference Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"conferenceRoomId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Conference Room"
								},
								{
									"key": "pinProtected",
									"type": "text",
									"value": "1"
								},
								{
									"key": "pinCode",
									"type": "text",
									"value": "1234"
								},
								{
									"key": "maxMembers",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/conference-rooms",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create Conference Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "number",
									"type": "text",
									"value": "500"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "conferenceRoom"
								},
								{
									"key": "conferenceRoomId",
									"type": "text",
									"value": "{{conferenceRoomId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				}
			]
		},
		{
			"name": "2400 - HuntGroup",
			"item": [
				{
					"name": "Create HungGroup RingAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"huntGroupRingAllId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS RingAll HuntGroup"
								},
								{
									"key": "strategy",
									"type": "text",
									"value": "ringAll"
								},
								{
									"key": "ringAllTimeout",
									"type": "text",
									"value": "10"
								},
								{
									"key": "noAnswerTargetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "noAnswerExtensionId",
									"type": "text",
									"value": "{{eveExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups/",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RingAll Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "number",
									"type": "text",
									"value": "700"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "huntGroup"
								},
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRingAllId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRingAllId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{bobUserId}}"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups-rel-users/"
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRingAllId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{charlieUserId}}"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups-rel-users/"
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRingAllId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{daveUserId}}"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups-rel-users/"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"huntGroupRRId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS RR HuntGroup"
								},
								{
									"key": "strategy",
									"type": "text",
									"value": "roundRobin"
								},
								{
									"key": "noAnswerTargetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "noAnswerExtensionId",
									"type": "text",
									"value": "{{eveExtensionId}}"
								},
								{
									"key": "ringAllTimeout",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups/",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RR Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "number",
									"type": "text",
									"value": "701"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "huntGroup"
								},
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRRId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRRId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{bobUserId}}"
								},
								{
									"key": "timeoutTime",
									"type": "text",
									"value": "3"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "1"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups-rel-users/"
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRRId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{charlieUserId}}"
								},
								{
									"key": "timeoutTime",
									"type": "text",
									"value": "3"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups-rel-users/"
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "huntGroupId",
									"type": "text",
									"value": "{{huntGroupRRId}}"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{daveUserId}}"
								},
								{
									"key": "timeoutTime",
									"type": "text",
									"value": "3"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "3"
								}
							]
						},
						"url": "{{api_url}}/hunt-groups-rel-users/"
					},
					"response": []
				}
			]
		},
		{
			"name": "2600 - Conditional Routes",
			"description": "",
			"item": [
				{
					"name": "Create Conditional Route",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8e37ede-e7bf-4865-bcc6-750da7398d02",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"conditionalRouteId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "name",
									"type": "text",
									"value": "BBS Conditional Route"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "user"
								},
								{
									"key": "userId",
									"type": "text",
									"value": "{{daveUserId}}"
								}
							]
						},
						"url": "{{api_url}}/conditional-routes",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create Conditional Route Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"tests[\"Object id is valid\"] = id !== 0;",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "companyId",
									"type": "text",
									"value": "{{companyId}}"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "conditional"
								},
								{
									"key": "number",
									"type": "text",
									"value": "800"
								},
								{
									"key": "conditionalRouteId",
									"type": "text",
									"value": "{{conditionalRouteId}}"
								}
							]
						},
						"url": "{{api_url}}/extensions/"
					},
					"response": []
				},
				{
					"name": "Add Conditional Route Codition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "824492d0-9c72-4631-95d0-bbaa44d630ce",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"",
									"    // Store ID for further requests",
									"    postman.setGlobalVariable(\"conditionalRouteConditionId\", id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "conditionalRouteId",
									"type": "text",
									"value": "{{conditionalRouteId}}"
								},
								{
									"key": "priority",
									"type": "text",
									"value": "1"
								},
								{
									"key": "routeType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "extensionId",
									"type": "text",
									"value": "{{aliceExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}/conditional-routes-conditions/",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add RouteLock to Condition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da2ddd65-1b5f-4589-bc2d-d17d554a1258",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "conditionId",
									"type": "text",
									"value": "{{conditionalRouteConditionId}}"
								},
								{
									"key": "routeLockId",
									"type": "text",
									"value": "{{routeLockId}}"
								}
							]
						},
						"url": "{{api_url}}/conditional-routes-conditions-rel-route-locks/",
						"description": "POST"
					},
					"response": []
				}
			]
		},
		{
			"name": "3000 - Call Forward Settings",
			"item": [
				{
					"name": "Call Forward Eve Busy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "userId",
									"type": "text",
									"value": "{{eveUserId}}"
								},
								{
									"key": "callTypeFilter",
									"type": "text",
									"value": "internal"
								},
								{
									"key": "callForwardType",
									"type": "text",
									"value": "busy"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "extensionId",
									"type": "text",
									"value": "{{charlieExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}/call-forward-settings",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Eve NoAnswer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "userId",
									"type": "text",
									"value": "{{eveUserId}}"
								},
								{
									"key": "callTypeFilter",
									"type": "text",
									"value": "internal"
								},
								{
									"key": "callForwardType",
									"type": "text",
									"value": "noAnswer"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "extensionId",
									"type": "text",
									"value": "{{bobExtensionId}}"
								},
								{
									"key": "noAnswerTimeout",
									"type": "text",
									"value": "5"
								}
							]
						},
						"url": "{{api_url}}/call-forward-settings",
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Eve Unregistered",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 Created\"] = responseCode.code === 201;",
									"",
									"var Location = postman.getResponseHeader(\"Location\");",
									"tests[\"Location header is present\"] = Location !== null;",
									"",
									"if (Location !== null) {",
									"    var id = Location.substr(Location.lastIndexOf('/') + 1);",
									"    tests[\"Object id is valid\"] = id !== 0;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "userId",
									"type": "text",
									"value": "{{eveUserId}}"
								},
								{
									"key": "callTypeFilter",
									"type": "text",
									"value": "internal"
								},
								{
									"key": "callForwardType",
									"type": "text",
									"value": "userNotRegistered"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "extension"
								},
								{
									"key": "extensionId",
									"type": "text",
									"value": "{{daveExtensionId}}"
								}
							]
						},
						"url": "{{api_url}}/call-forward-settings",
						"description": "POST"
					},
					"response": []
				}
			]
		}
	]
}